
import torch
import numpy as np
x90 = np.array([0.7071070192004544, 0.7071070192004544, 0, 0])
x_90 =  np.array([0.7071070192004544, -0.7071070192004544, 0, 0])
y90 = np.array([0.7071070192004544, 0,0.7071070192004544, 0])
y_90 =  np.array([0.7071070192004544, 0, -0.7071070192004544, 0])
z90 =  np.array([0.7071067811865476,0.0,0.0,0.7071067811865475])
z_90 = np.array([0.7071067811865476, 0, 0, -0.7071067811865476])
z45 =  np.array([0.9238795325112867,0.0,0.0,0.3826834323650897])
z89 =  np.array([0.7132504491541817,0.0,0.0,0.7009092642998508])
y180 = np.array([-6.73205103601583e-7, 0 ,1, 0])
eye = np.array([1, 0 , 0, 0])

rot_map = torch.FloatTensor([
            eye,
            eye,#[7.08558e-01, -2.63107e-02, -1.80805e-02,  7.04930e-01],         #
            [7.16320e-01, -5.91520e-02,  2.63363e-02,  6.94762e-01],
            [1, 0, 0, 0],
            eye,
            [1, 0, 0, 0],
            eye,
            eye,
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            eye,
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            eye,#[0.770651,   -0.0382369,   0.0958715,   0.628843],#[1, 0, 0, 0],
            eye,
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            eye,
            eye])
rot_map_real = torch.FloatTensor(
[[ 4.12610950e-01,  0.00000000e+00,  9.10907352e-01,  0.00000000e+00],
 [ 9.90610838e-01,  3.25564854e-02, -7.95670785e-03,  1.32540345e-01],
 [ 9.95070338e-01, 4.31158207e-02, 4.75474959e-03,  -8.91823769e-02],
 [ 9.99675989e-01, -1.09465597e-02,  5.85326052e-04, -2.29728054e-02],
 [ 9.96877313e-01, -6.57310709e-02 , 4.24642600e-02,  1.05773145e-02],
 [ 9.01164651e-01, 3.44223529e-01,  -1.13541707e-01, 2.37740874e-01],
 [ 9.97930467e-01, -5.93849197e-02,  6.33115356e-04,  2.46530548e-02],
 [ 9.96877313e-01,  6.57310709e-02, -4.24642600e-02, -1.05773145e-02],
 [ 9.01164651e-01,  3.44223529e-01 ,-1.13541707e-01 , 2.37740874e-01],
 [ 9.98237193e-01, -4.95827347e-02 , 2.97984108e-02,  1.32688330e-02],
 [ 9.96877313e-01, -6.57310709e-02,  1.13541707e-01, -2.37740874e-01],
 [ 9.01164651e-01, -3.44223529e-01,  1.13541707e-01, -2.37740874e-01],
 [ 9.94525075e-01 ,-9.50805172e-02, -1.17525486e-02 ,-4.17305939e-02],
 [ 9.65476990e-01, -7.18267187e-02 , 8.35980102e-02 , 2.36022159e-01],
 [ 9.44283009e-01,  3.12788151e-02 , 2.57795304e-01, -2.02219665e-01],
 [ 9.94525075e-01 , 9.50805172e-02 , 1.17525486e-02 ,4.17305939e-02],
 [ 9.14605975e-01 ,-3.19874525e-01 , 1.73987582e-01 , 1.75796613e-01],
 [ 9.09979582e-01 , 4.07817483e-01 , 4.87384200e-02 , 5.69786504e-02],
 [ 9.46191132e-01, -2.38109961e-01, -1.55990183e-01 , 1.53925285e-01],
 [ 7.84662306e-01 , 1.05570197e-01 , 2.79279947e-01, -5.43288767e-01],
 [ 9.46191132e-01 , 2.38109961e-01 , 1.55990183e-01, -1.53925285e-01],
 [ 7.84662306e-01, -1.05570197e-01, -2.79279947e-01 , 5.43288767e-01],
 [ 9.46191132e-01, -2.38109961e-01, -1.55990183e-01 , 1.53925285e-01],
 [ 7.84662306e-01 , 1.05570197e-01,  2.79279947e-01, -5.43288767e-01]])